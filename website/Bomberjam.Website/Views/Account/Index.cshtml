@using Bomberjam.Website.Utils
@model AccountReadWriteViewModel

@{
  ViewData["Title"] = "Account";
  var utcNow = DateTime.UtcNow;
}

<div class="jumbotron">
  <div class="row justify-content-between">
    <div class="col-md-5">
      <form asp-controller="Account" asp-action="Edit" method="post">
        <div class="form-group">
          <label asp-for="UserName"></label>
          <input asp-for="UserName" value="@Model.UserName" class="form-control form-control-sm" aria-describedby="userNameHelp">
          <small id="userNameHelp" class="form-text text-muted">
            Username can only contain letters and digits from 2 to 32 characters. Spaces are not allowed.
          </small>
          <span asp-validation-for="UserName" class="invalid-feedback"></span>
        </div>

        <div class="form-group">
          <label asp-for="Organization"></label>
          <input asp-for="Organization" value="@Model.Organization" class="form-control form-control-sm" aria-describedby="organizationHelp">
          <small id="organizationHelp" class="form-text text-muted">
            Your company, your school, etc.
          </small>
          <span asp-validation-for="Organization" class="invalid-feedback"></span>
        </div>

        <button class="btn btn-success my-4" type="submit">Save changes</button>
      </form>
    </div>

    <div class="col-md-5 mt-4">
      <ul>
        <li>Your rank is <strong>#@Model.User.GlobalRank</strong></li>
        <li>You have <strong><span format-points="@Model.User.Points"></span></strong> points</li>
        <li>Click <a asp-controller="Web" asp-action="UserDetails" asp-route-userId="@Model.User.Id">here</a> to see your game history</li>
      </ul>

      <p class="lead mt-4 mb-0">
        <a asp-controller="Account" asp-action="Submit" class="btn btn-lg btn-success">
          @if (Model.Bots.Count == 0)
          {
            <text>Upload a bot</text>
          }
          else
          {
            <text>Upload another bot</text>
          }
        </a>
      </p>
    </div>
  </div>
</div>

<h2>Your bots</h2>

@{
  var isAdministrator = this.User.IsAdministrator();
  var colspan = isAdministrator ? 5 : 4;
}

<div class="table-responsive">
  <table class="table table-sm table-bordered table-striped">
    <thead>
    <tr>
      <th>#</th>
      <th>Date</th>
      <th>Language</th>
      <th>Status</th>
      <th>Games played</th>
      @if (isAdministrator)
      {
        <th style="width: 1%">&nbsp;</th>
      }
    </tr>
    </thead>
    <tbody>
    @foreach (var bot in Model.Bots)
    {
      <tr>
        <td>@bot.Iteration</td>
        <td><span title="@bot.Created">@bot.Created.RelativeTo(utcNow)</span></td>
        <td>@(string.IsNullOrEmpty(bot.Language) ? "Unknown" : bot.Language)</td>
        <td>
          <div style="max-height: 150px; overflow-y: auto">
          @bot.Status.ToDisplayString()
          @if (bot.Status == CompilationStatus.CompilationFailed && !string.IsNullOrWhiteSpace(bot.Errors))
          {
            <pre><code>@bot.Errors</code></pre>
          }
          </div>
        </td>
        <td>@bot.GameCount</td>
        @if (isAdministrator)
        {
          <td>
            <a asp-controller="Account" asp-action="DownloadBot" asp-route-botId="@bot.Id">
              <i class="fas fa-download" title="@(bot.Status == CompilationStatus.CompilationSucceeded ? "Download packaged bot" : "Download bot source code")"></i>
            </a>
          </td>
        }
      </tr>
    }
    @if (Model.Bots.Count == 0)
    {
      <tr>
        <td colspan="@colspan" class="text-center">There's nothing here</td>
      </tr>
    }
    </tbody>
  </table>
</div>